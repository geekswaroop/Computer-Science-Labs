$date
	Sun Oct 13 10:14:52 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module demux_tb $end
$var wire 32 ! a9 [31:0] $end
$var wire 32 " a8 [31:0] $end
$var wire 32 # a7 [31:0] $end
$var wire 32 $ a6 [31:0] $end
$var wire 32 % a5 [31:0] $end
$var wire 32 & a4 [31:0] $end
$var wire 32 ' a3 [31:0] $end
$var wire 32 ( a2 [31:0] $end
$var wire 32 ) a16 [31:0] $end
$var wire 32 * a15 [31:0] $end
$var wire 32 + a14 [31:0] $end
$var wire 32 , a13 [31:0] $end
$var wire 32 - a12 [31:0] $end
$var wire 32 . a11 [31:0] $end
$var wire 32 / a10 [31:0] $end
$var wire 32 0 a1 [31:0] $end
$var reg 32 1 data [31:0] $end
$var reg 4 2 s [3:0] $end
$scope module DeM $end
$var wire 32 3 D [31:0] $end
$var wire 32 4 a1 [31:0] $end
$var wire 32 5 a10 [31:0] $end
$var wire 32 6 a11 [31:0] $end
$var wire 32 7 a12 [31:0] $end
$var wire 32 8 a13 [31:0] $end
$var wire 32 9 a14 [31:0] $end
$var wire 32 : a15 [31:0] $end
$var wire 32 ; a16 [31:0] $end
$var wire 32 < a2 [31:0] $end
$var wire 32 = a3 [31:0] $end
$var wire 32 > a4 [31:0] $end
$var wire 32 ? a5 [31:0] $end
$var wire 32 @ a6 [31:0] $end
$var wire 32 A a7 [31:0] $end
$var wire 32 B a8 [31:0] $end
$var wire 32 C a9 [31:0] $end
$var wire 4 D s [3:0] $end
$var reg 32 E A1 [31:0] $end
$var reg 32 F A10 [31:0] $end
$var reg 32 G A11 [31:0] $end
$var reg 32 H A12 [31:0] $end
$var reg 32 I A13 [31:0] $end
$var reg 32 J A14 [31:0] $end
$var reg 32 K A15 [31:0] $end
$var reg 32 L A16 [31:0] $end
$var reg 32 M A2 [31:0] $end
$var reg 32 N A3 [31:0] $end
$var reg 32 O A4 [31:0] $end
$var reg 32 P A5 [31:0] $end
$var reg 32 Q A6 [31:0] $end
$var reg 32 R A7 [31:0] $end
$var reg 32 S A8 [31:0] $end
$var reg 32 T A9 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b1100000001111101001011100100 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b10 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b1100000001111101001011100100 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b1100000001111101001011100100 3
b10 2
b1100000001111101001011100100 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b1100000001111101001011100100 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100
b10110011011000101101000111110111 /
b10110011011000101101000111110111 5
b10110011011000101101000111110111 F
b10110011011000101101000111110111 1
b10110011011000101101000111110111 3
b1001 2
b1001 D
#200
b10001111001110000111100100010 '
b10001111001110000111100100010 =
b10001111001110000111100100010 N
b10001111001110000111100100010 1
b10001111001110000111100100010 3
b10 2
b10 D
#300
b11011011001111000110000010011101 .
b11011011001111000110000010011101 6
b11011011001111000110000010011101 G
b11011011001111000110000010011101 1
b11011011001111000110000010011101 3
b1010 2
b1010 D
#400
b10000010110101000000000001000110 0
b10000010110101000000000001000110 4
b10000010110101000000000001000110 E
b10000010110101000000000001000110 1
b10000010110101000000000001000110 3
b0 2
b0 D
#500
b1100010001010001000001110101100 )
b1100010001010001000001110101100 ;
b1100010001010001000001110101100 L
b1100010001010001000001110101100 1
b1100010001010001000001110101100 3
b1111 2
b1111 D
#600
b111000000110110100011001110001 !
b111000000110110100011001110001 C
b111000000110110100011001110001 T
b111000000110110100011001110001 1
b111000000110110100011001110001 3
b1000 2
b1000 D
#700
b10111100110100001111100100011011 -
b10111100110100001111100100011011 7
b10111100110100001111100100011011 H
b10111100110100001111100100011011 1
b10111100110100001111100100011011 3
b1011 2
b1011 D
#800
